#!/bin/bash
if [ ! -f uberspace.config ]; then
  echo "Please go to the root directory of the meteor app first, and set up uberspace.config"
  exit
fi

source uberspace.config

echo "using following uberspace.config:"
echo "----------------------"
cat uberspace.config
echo "----------------------"

read -p "Continue with above config? " -n 1 -r
echo    # (optional) move to a new line
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
    exit 1
fi

node_path=/package/host/localhost/nodejs-$uberspace_node_version/bin
buildname=$uberspace_servicename-build

echo "Building..."
meteor build --architecture os.linux.x86_64 $TMPDIR/$buildname

echo "Uploading..."
scp -rCp $TMPDIR$buildname $uberspace_username@$uberspace_host:~/tmp/build

echo "Cleaning up..."
rm -rf $TMPDIR$buildname

# continuing remotely:
echo "Continuing remotely:"

ssh $uberspace_username@$uberspace_host /bin/bash << EOF

echo node_path: $node_path
echo -n nodejs version...
$node_path/node --version
echo -n npm version...
$node_path/npm --version

cd ~/tmp/build
echo "Unpacking..."
tar -xzf *.tar.gz

echo "Installing node modules..."
source ~/.bash_profile
cd ~/tmp/build/bundle/programs/server/
$node_path/npm install
$node_path/npm install lodash.keys
$node_path/npm install fibers

echo "Stopping server..."
svc -d ~/service/$uberspace_servicename
sleep 1

echo "Replacing live files..."
rm -rf ~/$uberspace_server_dir/bundle-previous
if [ -d ~/$uberspace_server_dir/bundle ]; then
   mv ~/$uberspace_server_dir/bundle ~/$uberspace_server_dir/bundle-previous
fi
cd ~/tmp
mv build/bundle ~/$uberspace_server_dir/

echo "Cleaning up..."
cd ~/tmp
rm -r build

echo "Listening to log... CTRL-C to exit"
tail -f -n 0 ~/service/$uberspace_servicename/log/main/current &

echo "Starting server..."
svc -u ~/service/$uberspace_servicename
echo "Done."

EOF
